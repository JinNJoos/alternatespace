<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_iconblank</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mode = "fade in";
alarm[0] = 60 + random(30);

key = global.p1_tech_c;
Inputcheckkey();
pad = global.p1p_tech_c;
Inputcheckpad();

keyshift = global.p1_shift;
Inputcheckkeyshift();
padshift = global.p1p_shift;
Inputcheckpadshift();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (mode = "active")
{
    mode = "set";
}

if (mode = "fade in")
{
    mode = "active";
    alarm[0] = 10;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (mode = "fade in")
{
    image_alpha = 0;
}

if (mode = "active")
{
    if (image_alpha = 0)
    {
        image_alpha = 1;
    }
    else if (image_alpha = 1)
    {
        image_alpha = 0;
    }
}

if (mode = "set")
{
    image_alpha = 1;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.p1skill_f = 'none')
{
    sprite_index = s_iconblank;
}
if (global.p1skill_f = tech_testblast)
{
    sprite_index = s_iconcshot;
}
if (global.p1skill_f = tech_testblast2)
{
    sprite_index = s_iconrfire;
}
if (global.p1skill_f = tech_testlaser)
{
    sprite_index = s_iconrlaser;
}
if (global.p1skill_f = tech_testblast3)
{
    sprite_index = s_iconsshot;
}
if (global.p1skill_f = tech_testblast4)
{
    sprite_index = s_iconcblast;
}
if (global.p1skill_f = tech_testblast5)
{
    sprite_index = s_iconcorb;
}
if (global.p1skill_f = tech_testpunch1)
{
    sprite_index = s_iconphits;
}
if (global.p1skill_f = tech_testpunch2)
{
    sprite_index = s_iconrtaps;
}
if (global.p1skill_f = tech_testpunch3)
{
    sprite_index = s_iconrtackle;
}
if (global.p1skill_f = tech_testpunch4)
{
    sprite_index = s_iconwswing;
}
if (global.p1skill_f = tech_testgrapple)
{
    sprite_index = s_icongrab;
}
if (global.p1skill_f = tech_testcounter)
{
    sprite_index = s_iconcounter;
}
if (global.p1skill_f = tech_testtrap)
{
    sprite_index = s_iconshackles;
}
if (global.p1skill_f = tech_testreflect)
{
    sprite_index = s_iconreflect;
}
if (global.p1skill_f = tech_testteleport)
{
    sprite_index = s_iconteleport;
}
if (global.p1skill_f = tech_testrevector)
{
    sprite_index = s_iconvector;
}
if (global.p1skill_f = tech_testduplicate)
{
    sprite_index = s_iconclone;
}
if (global.p1skill_f = tech_testoverdrive)
{
    sprite_index = s_icondrive;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
draw_set_halign(fa_center);
draw_set_valign(fa_middle);
if (mode = "set")
{
    if (global.p1skill_f = 'none')
    {
        draw_text(x,y-10,"Skill C2")
        if (global.p1input = 'key')
        {
            draw_text(x,y+10,string(keyshift)+"+"+string(key));
        }
        if (global.p1input = 'pad')
        {
            draw_text(x,y+10,string(padshift)+"+"+string(pad));
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
