<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_tabchroma</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>45</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mode = "fade in";
alarm[0] = 1 + random(30);
def_y = y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (mode = "next")
{
    instance_create(140,160,o_pal1);
    instance_create(200,160,o_pal2);
    instance_create(260,160,o_pal3);
    instance_create(320,160,o_pal4);
    instance_create(380,160,o_pal5);
    instance_create(440,160,o_pal6);
    instance_create(500,160,o_pal7);
    
    instance_create(140,220,o_colorviolet);
    instance_create(200,220,o_colorblue);
    instance_create(260,220,o_colorgreen);
    instance_create(320,220,o_colorwhite);
    instance_create(380,220,o_coloryellow);
    instance_create(440,220,o_colororange);
    instance_create(500,220,o_colorred);
    o_char1arrow.mode = 'paletteselect';
    o_char2arrow.mode = 'paletteselect';
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (mode = "active")
{
    mode = "set";
}

if (mode = "fade in")
{
    mode = "active";
    alarm[0] = 10;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (mode = "next")
{
    y -= (y-180)*0.1;
}

if (mode = "fade in")
{
    image_alpha = 0;
}

if (mode = "active")
{
    if (image_alpha = 0)
    {
        image_alpha = 1;
    }
    else if (image_alpha = 1)
    {
        image_alpha = 0;
    }
}

if (mode = "set")
{
    image_alpha = 1;
    y += (def_y - y)*0.1;
    
    if (instance_exists(o_pal1))
    {
        with (o_pal1)
        {
            instance_destroy()
        }
    }
    if (instance_exists(o_pal2))
    {
        with (o_pal2)
        {
            instance_destroy()
        }
    }
    if (instance_exists(o_pal3))
    {
        with (o_pal3)
        {
            instance_destroy()
        }
    }
    if (instance_exists(o_pal4))
    {
        with (o_pal4)
        {
            instance_destroy()
        }
    }
    if (instance_exists(o_pal5))
    {
        with (o_pal5)
        {
            instance_destroy()
        }
    }
    if (instance_exists(o_pal6))
    {
        with (o_pal6)
        {
            instance_destroy()
        }
    }
    if (instance_exists(o_pal7))
    {
        with (o_pal7)
        {
            instance_destroy()
        }
    }
    
    if (instance_exists(o_colorviolet))
    {
        with (o_colorviolet)
        {
            instance_destroy()
        }
    }
    if (instance_exists(o_colorblue))
    {
        with (o_colorblue)
        {
            instance_destroy()
        }
    }
    if (instance_exists(o_colorgreen))
    {
        with (o_colorgreen)
        {
            instance_destroy()
        }
    }
    if (instance_exists(o_colorwhite))
    {
        with (o_colorwhite)
        {
            instance_destroy()
        }
    }
    if (instance_exists(o_coloryellow))
    {
        with (o_coloryellow)
        {
            instance_destroy()
        }
    }
    if (instance_exists(o_colororange))
    {
        with (o_colororange)
        {
            instance_destroy()
        }
    }
    if (instance_exists(o_colorred))
    {
        with (o_colorred)
        {
            instance_destroy()
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprite_index,-1,x,y,1,1,0,c_white,image_alpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
