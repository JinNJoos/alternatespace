<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_auraglow</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (player = 1)
{
    x = o_p1.x;
    y = o_p1.y;
}
if (player = 2)
{
    x = o_p2.x;
    y = o_p2.y;
}
if (player = 3)
{
    x = o_p1tutorial.x;
    y = o_p1tutorial.y;
}
if (player =4)
{
    x = o_p2tutorial.x;
    y = o_p2tutorial.y;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_halign(fa_center);
draw_set_valign(fa_middle);
if (player = 1)
{
    draw_sprite_ext(sprite_index,image_index,o_p1.x,o_p1.y,image_xscale*1.1,image_yscale*1.1,image_angle,c_white,global.p1tp/750);
    draw_set_blend_mode(bm_add);
    draw_sprite_ext(sprite_index,image_index,o_p1.x,o_p1.y,image_xscale*1.2,image_yscale*1.2,image_angle,global.p1aura,global.p1tp/500);
    draw_set_blend_mode(bm_normal);
}
if (player = 2)
{
    draw_sprite_ext(sprite_index,image_index,o_p2.x,o_p2.y,image_xscale*1.1,image_yscale*1.1,image_angle,c_white,global.p2tp/750);
    draw_set_blend_mode(bm_add);
    draw_sprite_ext(sprite_index,image_index,o_p2.x,o_p2.y,image_xscale*1.2,image_yscale*1.2,image_angle,global.p2aura,global.p2tp/500);
    draw_set_blend_mode(bm_normal);
}
if (player = 3)
{
    draw_sprite_ext(sprite_index,image_index,o_p1tutorial.x,o_p1tutorial.y,image_xscale*1.1,image_yscale*1.1,image_angle,c_white,global.p1tp/750);
    draw_set_blend_mode(bm_add);
    draw_sprite_ext(sprite_index,image_index,o_p1tutorial.x,o_p1tutorial.y,image_xscale*1.2,image_yscale*1.2,image_angle,global.p1aura,global.p1tp/500);
    draw_set_blend_mode(bm_normal);
}
if (player = 4)
{
    draw_sprite_ext(sprite_index,image_index,o_p2tutorial.x,o_p2tutorial.y,image_xscale*1.1,image_yscale*1.1,image_angle,c_white,global.p2tp/750);
    draw_set_blend_mode(bm_add);
    draw_sprite_ext(sprite_index,image_index,o_p2tutorial.x,o_p2tutorial.y,image_xscale*1.2,image_yscale*1.2,image_angle,global.p2aura,global.p2tp/500);
    draw_set_blend_mode(bm_normal);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
