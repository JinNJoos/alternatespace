<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_camera</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>3000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_listener_orientation(0,0,1,0,-1,0);

alarm[0] = 200
instance_create(x,y,o_back)

emitvoice = audio_emitter_create();
audio_emitter_position(emitvoice,x,y,100);
audio_emitter_gain(emitvoice,(global.master/100)*(global.voice/100));
hi = audio_play_sound_on(emitvoice,f_areyouready,false,10);

emitmusic = audio_emitter_create();
audio_emitter_position(emitmusic,x,y,100);
audio_emitter_gain(emitmusic,(global.master/100)*(global.music/100));
global.bgm = audio_play_sound_on(emitmusic,global.theme,true,10);

target_zoom = 2
zoom = 1
default_zoom = 2
target_x = 0
target_y = 0
minx = room_width
miny = room_height
maxx = 0
maxy = 0
radius = 0;
border = 80;
pos_smoothing = 0.1
zoom_smoothing = 0.125
shake = 0
shake_decay = 0.8
aspect_ratio = 9/16
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hi = audio_play_sound_on(emitvoice,f_fight,false,10);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set zoom and target position around players
var mindist = 0 ;
var maxdist = 0;

minx = room_width
miny = room_height
maxx = 0
maxy = 0
radius = 0
if(instance_number(o_parent) &gt; 0)
{
    target_x = 0
    target_y = 0
}
with(o_parent)
{
    other.target_x+=x
    other.target_y+=y
    if(x &lt; other.minx) { other.minx = x }
    if(y &lt; other.miny) { other.miny = y }
    if(x &gt; other.maxx) { other.maxx = x }
    if(y &gt; other.maxy) { other.maxy = y }
}
target_zoom = default_zoom
minx = ((minx-x)*aspect_ratio)+x
maxx = ((maxx-x)*aspect_ratio)+x
mindist = point_distance(x, y, minx, miny);
maxdist = point_distance(x, y, maxx, maxy);

radius = maxdist
if(mindist &gt; radius) { radius = mindist }
radius += border

if(instance_number(o_parent) &gt; 0)
{
    target_x /= instance_number(o_parent)
    target_y /= instance_number(o_parent)
    target_zoom = (radius*2)/view_hport[0]
}

if(target_zoom &lt; 0.5) { target_zoom = 0.5 }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///apply target pos and zoom

if(x != target_x)
{
    if(abs(x-target_x)&lt;1) { x = target_x }
    else
    {
        x+=(target_x - x)*pos_smoothing
    }
}
if(y != target_y)
{
    if(abs(y-target_y)&lt;1) { y = target_y }
    else
    {
        y+=(target_y - y)*pos_smoothing
    }
}
if(zoom != target_zoom)
{
    if(abs(zoom-target_zoom)&lt;0.01) { zoom = target_zoom }
    else
    {
        zoom+=(target_zoom - zoom)*zoom_smoothing
    }
}

view_wview[0]=640*zoom
view_hview[0]=360*zoom


view_xview[0] = -(view_wview[0]/2) + x
view_yview[0] = -(view_hview[0]/2) + y
view_xview[0] += random_range(-shake, shake)
view_yview[0] += random_range(-shake, shake)
if(shake &gt; 0.01) { shake *= shake_decay }
else { shake = 0 }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///background music

audio_listener_position(x,y,0);
audio_emitter_position(emitvoice,x,y,100);
audio_emitter_gain(emitvoice,(global.master/100)*(global.voice/100));
audio_emitter_position(emitmusic,x,y,100);
audio_emitter_gain(emitmusic,(global.master/100)*(global.music/100));

pos = audio_sound_get_track_position(global.bgm);
if (global.theme = f_automation)
{
    if (pos &gt;= 128.57)
    {
        audio_sound_set_track_position(global.bgm,17.15);
    }
}
if (global.theme = f_excursion)
{
    if (pos &gt;= 149.78)
    {
        audio_sound_set_track_position(global.bgm,13.62);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (audio_is_playing(global.bgm))
{
    audio_stop_sound(global.bgm);
}
room_goto(r_title);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
