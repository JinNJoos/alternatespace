<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_testgrab</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (mode = "miss")
{
    if (instance_exists(o_testchain))
    {
        if (player = 1)
        {
            with (o_testchain)
            {
                if (player = 1)
                {
                    instance_destroy();
                }
            }
        }
        if (player = 2)
        {
            with (o_testchain)
            {
                if (player = 2)
                {
                    instance_destroy();
                }
            }
        }
    }
    instance_destroy();
}

if (mode = "hit")
{
    mode = "miss";
    speed = 0;
    alarm[0] = 20;
}

if (mode = "grab")
{
    if (player = 1)
    {
        with (o_p1)
        {
            sprite_index = paim;
            image_index = 0;
            image_speed = 0.5;
            image_xscale = 1;
            image_angle = point_direction(x,y,o_p2.x,o_p2.y);
            if (image_angle &lt;= 90)
            or (image_angle &gt; 270)
            {
                image_yscale = 1;
            }
            if (image_angle &gt; 90)
            and (image_angle &lt;= 270)
            {
                image_yscale = -1;
            }
            alarm[0] = 20;
        }
        with (o_p2)
        {
            mode = "bounce";
            motion_set(point_direction(x,y,o_p1.x,o_p1.y),distance_to_object(o_p1)/18);
            alarm[0] = 30;
        }
    }
    if (player = 2)
    {
        with (o_p2)
        {
            sprite_index = paim;
            image_index = 0;
            image_speed = 0.5;
            image_xscale = 1;
            image_angle = point_direction(x,y,o_p1.x,o_p1.y);
            if (image_angle &lt;= 90)
            or (image_angle &gt; 270)
            {
                image_yscale = 1;
            }
            if (image_angle &gt; 90)
            and (image_angle &lt;= 270)
            {
                image_yscale = -1;
            }
            alarm[0] = 20;
        }
        with (o_p1)
        {
            mode = "bounce";
            motion_set(point_direction(x,y,o_p2.x,o_p2.y),distance_to_object(o_p2)/18);
            alarm[0] = 30;
        }
    }
    if (instance_exists(o_testchain))
    {
        if (player = 1)
        {
            with (o_testchain)
            {
                if (player = 1)
                {
                    instance_destroy();
                }
            }
        }
        if (player = 2)
        {
            with (o_testchain)
            {
                if (player = 2)
                {
                    instance_destroy();
                }
            }
        }
    }
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (mode = "hit")
{
    a = instance_create(x,y,o_testchain);
    a.player = player;
    a.image_angle = image_angle;
    a.aura = aura;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="o_testdriver">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>    if (instance_exists(o_testchain))
    {
        if (player = 1)
        {
            with (o_testchain)
            {
                if (player = 1)
                {
                    instance_destroy();
                }
            }
        }
        if (player = 2)
        {
            with (o_testchain)
            {
                if (player = 2)
                {
                    instance_destroy();
                }
            }
        }
    }
    instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="o_burst">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>    if (instance_exists(o_testchain))
    {
        if (player = 1)
        {
            with (o_testchain)
            {
                if (player = 1)
                {
                    instance_destroy();
                }
            }
        }
        if (player = 2)
        {
            with (o_testchain)
            {
                if (player = 2)
                {
                    instance_destroy();
                }
            }
        }
    }
    instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="o_p2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (mode = "hit")
{
if (player = 1)
{
    if (global.p2hp &gt; 0)
    {
    speed = 0;
    with (o_p2)
    {
        if (mode = "guard")
        {
            if (audio_is_playing(p2snd_effect))
            {
                audio_stop_sound(p2snd_effect);
            }
            p2snd_effect = audio_play_sound_on(p2emit,f_block,false,10);
            motion_set(other.direction,2);
            global.p2tp -= 1;
            with (other)
            {
                mode = "miss";
            }
        }
        if not (mode = "guard")
        {
            if (audio_is_playing(p2snd_effect))
            {
                audio_stop_sound(p2snd_effect);
            }
            if (audio_is_playing(p2snd_vocal))
            {
                audio_stop_sound(p2snd_vocal);
            }
            p2snd_effect = audio_play_sound_on(p2emit,f_firehit,false,10);
            p2snd_vocal = audio_play_sound_on(p2voice,choose(vhurt1,vhurt2),false,10);
            mode = "hurt"
            alarm[0] = 45;
            motion_set(other.direction,0);
            if (global.p2hp &gt; 0)
            {
                global.p2hp -= 2*o_p1.overdrive;
            }
            if not (instance_exists(o_dmger2))
            {
                instance_create(other.x,other.y,o_dmger2)
                with (o_dmger2)
                {
                    dmg += 2*o_p1.overdrive;
                }
            }
            else if (instance_exists(o_dmger2))
            {
                with (o_dmger2)
                {
                    dmg += 2*o_p1.overdrive;
                }
            }
            with (other)
            {
                mode = "grab";
                alarm[0] = 20;
            }
        }
    }
    }
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="o_p1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (mode = "hit")
{
if (player = 2)
{
    if (global.p1hp &gt; 0)
    {
    speed = 0;
    with (o_p1)
    {
        if (mode = "guard")
        {
            if (audio_is_playing(p1snd_effect))
            {
                audio_stop_sound(p1snd_effect);
            }
            p1snd_effect = audio_play_sound_on(p1emit,f_block,false,10);
            motion_set(other.direction,2);
            global.p1tp -= 1;
            with (other)
            {
                mode = "miss";
            }
        }
        if not (mode = "guard")
        {
            if (audio_is_playing(p1snd_effect))
            {
                audio_stop_sound(p1snd_effect);
            }
            if (audio_is_playing(p1snd_vocal))
            {
                audio_stop_sound(p1snd_vocal);
            }
            p1snd_effect = audio_play_sound_on(p1emit,f_firehit,false,10);
            p1snd_vocal = audio_play_sound_on(p1voice,choose(vhurt1,vhurt2),false,10);
            mode = "hurt"
            alarm[0] = 45;
            motion_set(other.direction,0);
            if (global.p1hp &gt; 0)
            {
                global.p1hp -= 2*o_p2.overdrive;
            }
            if not (instance_exists(o_dmger1))
            {
                instance_create(other.x,other.y,o_dmger1)
                with (o_dmger1)
                {
                    dmg += 2*o_p2.overdrive;
                }
            }
            else if (instance_exists(o_dmger1))
            {
                with (o_dmger1)
                {
                    dmg += 2*o_p2.overdrive;
                }
            }
            with (other)
            {
                mode = "grab";
                alarm[0] = 20;
            }
        }
    }
    }
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprite_index,image_index,x,y,1,image_yscale,image_angle,c_white,0.4);
draw_set_blend_mode(bm_add);
draw_sprite_ext(sprite_index,image_index,x,y,1,image_yscale,image_angle,aura,0.5);
draw_set_blend_mode(bm_normal);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
