<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (player = 1)
{
    if (keyboard_check(global.p1_move_up))
    or (gamepad_button_check(0,global.p1p_move_up))
    {
        y = o_p1.y - 50;
    }
    if (keyboard_check(global.p1_move_down))
    or (gamepad_button_check(0,global.p1p_move_down))
    {
        y = o_p1.y + 50;
    }
    if (keyboard_check(global.p1_move_left))
    or (gamepad_button_check(0,global.p1p_move_left))
    {
        x = o_p1.x - 50;
    }
    if (keyboard_check(global.p1_move_right))
    or (gamepad_button_check(0,global.p1p_move_right))
    {
        x = o_p1.x + 50;
    }
    if not (keyboard_check(global.p1_move_up))
    and not (keyboard_check(global.p1_move_down))
    and not (gamepad_button_check(0,global.p1p_move_up))
    and not (gamepad_button_check(0,global.p1p_move_down))
    {
        y = o_p1.y;
    }
    if not (keyboard_check(global.p1_move_left))
    and not (keyboard_check(global.p1_move_right))
    and not (gamepad_button_check(0,global.p1p_move_left))
    and not (gamepad_button_check(0,global.p1p_move_right))
    {
        x = o_p1.x;
    }
    if not (keyboard_check(global.p1_move_up))
    and not (keyboard_check(global.p1_move_down))
    and not (keyboard_check(global.p1_move_left))
    and not (keyboard_check(global.p1_move_right))
    and not (gamepad_button_check(0,global.p1p_move_up))
    and not (gamepad_button_check(0,global.p1p_move_down))
    and not (gamepad_button_check(0,global.p1p_move_left))
    and not (gamepad_button_check(0,global.p1p_move_right))
    {
        x = o_p1.x + lengthdir_x(1,direction);
        y = o_p1.y + lengthdir_y(1,direction);
    }
}

if (player = 2)
{
    if (keyboard_check(global.p2_move_up))
    or (gamepad_button_check(1,global.p2p_move_up))
    {
        y = o_p2.y - 50;
    }
    if (keyboard_check(global.p2_move_down))
    or (gamepad_button_check(1,global.p2p_move_down))
    {
        y = o_p2.y + 50;
    }
    if (keyboard_check(global.p2_move_left))
    or (gamepad_button_check(1,global.p2p_move_left))
    {
        x = o_p2.x - 50;
    }
    if (keyboard_check(global.p2_move_right))
    or (gamepad_button_check(1,global.p2p_move_right))
    {
        x = o_p2.x + 50;
    }
    if not (keyboard_check(global.p2_move_up))
    and not (keyboard_check(global.p2_move_down))
    and not (gamepad_button_check(1,global.p2p_move_up))
    and not (gamepad_button_check(1,global.p2p_move_down))
    {
        y = o_p2.y;
    }
    if not (keyboard_check(global.p2_move_left))
    and not (keyboard_check(global.p2_move_right))
    and not (gamepad_button_check(1,global.p2p_move_left))
    and not (gamepad_button_check(1,global.p2p_move_right))
    {
        x = o_p2.x;
    }
    if not (keyboard_check(global.p2_move_up))
    and not (keyboard_check(global.p2_move_down))
    and not (keyboard_check(global.p2_move_left))
    and not (keyboard_check(global.p2_move_right))
    and not (gamepad_button_check(1,global.p2p_move_up))
    and not (gamepad_button_check(1,global.p2p_move_down))
    and not (gamepad_button_check(1,global.p2p_move_left))
    and not (gamepad_button_check(1,global.p2p_move_right))
    {
        x = o_p2.x + lengthdir_x(1,direction);
        y = o_p2.y + lengthdir_y(1,direction);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
