<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_auramax</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hit = true;

emit = audio_emitter_create();
audio_emitter_position(emit,x,y,150);
audio_emitter_gain(emit,(global.master/100)*(global.effect/100));
c = audio_play_sound_on(emit,f_overdrive,false,10);

image_xscale = 1/4;
image_yscale = 1/4;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_emitter_position(emit,x,y,150);
audio_emitter_gain(emit,(global.master/100)*(global.effect/100));
image_xscale += 0.09;
image_yscale += 0.09;
image_alpha -= 0.03;
if (image_alpha &lt; 0)
{
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="o_p2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (player = 1)
{
    if (hit = true)
    {
        if (global.p2hp &gt; 0)
        {
            dir = point_direction(x,y,o_p2.x,o_p2.y);
            with (o_p2)
            {
                if (mode = "guard")
                {
                    emit = audio_emitter_create();
                    audio_emitter_position(emit,x,y,150);
                    audio_emitter_gain(emit,(global.master/100)*(global.effect/100));
                    d = audio_play_sound_on(emit,f_block,false,10);
                    motion_set(other.dir,other.image_alpha*10);
                    global.p2tp -= 1;
                }
                if not (mode = "guard")
                {
                    if (audio_is_playing(c))
                    {
                        audio_stop_sound(c);
                    }
                    if (audio_is_playing(d))
                    {
                        audio_stop_sound(d);
                    }
                    if (audio_is_playing(e))
                    {
                        audio_stop_sound(e);
                    }
                    audio_emitter_position(p2emit,x,y,150);
                    audio_emitter_gain(p2emit,(global.master/100)*(global.effect/100));
                    c = audio_play_sound_on(p2emit,f_firehit,false,10);
                    audio_emitter_position(p2voice,x,y,150);
                    audio_emitter_gain(p2voice,(global.master/100)*(global.voice/100));
                    e = audio_play_sound_on(p2voice,choose(vhurt3,vhurt4),false,10);
                    mode = "slam"
                    alarm[0] = round(other.image_alpha*40);
                    motion_set(other.dir,other.image_alpha*20);
                    if (global.p2hp &gt; 0)
                    {
                        global.p2hp -= round(other.image_alpha*20);
                    }
                    if not (instance_exists(o_dmger2))
                    {
                        instance_create(other.x,other.y,o_dmger2)
                        value = round(other.image_alpha*20);
                        with (o_dmger2)
                        {
                            dmg += other.value;
                        }
                    }
                    else if (instance_exists(o_dmger2))
                    {
                        value = round(other.image_alpha*20);
                        with (o_dmger2)
                        {
                            dmg += other.value;
                        }
                    }
                }
            }
            hit = false
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="o_p1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (player = 2)
{
    if (hit = true)
    {
        if (global.p1hp &gt; 0)
        {
            dir = point_direction(x,y,o_p1.x,o_p1.y);
            with (o_p1)
            {
                if (mode = "guard")
                {
                    emit = audio_emitter_create();
                    audio_emitter_position(emit,x,y,150);
                    audio_emitter_gain(emit,(global.master/100)*(global.effect/100));
                    d = audio_play_sound_on(emit,f_block,false,10);
                    motion_set(other.dir,other.image_alpha*10);
                    global.p1tp -= 1;
                }
                if not (mode = "guard")
                {
                    if (audio_is_playing(c))
                    {
                        audio_stop_sound(c);
                    }
                    if (audio_is_playing(d))
                    {
                        audio_stop_sound(d);
                    }
                    if (audio_is_playing(e))
                    {
                        audio_stop_sound(e);
                    }
                    audio_emitter_position(p1emit,x,y,150);
                    audio_emitter_gain(p1emit,(global.master/100)*(global.effect/100));
                    c = audio_play_sound_on(p1emit,f_firehit,false,10);
                    audio_emitter_position(p1voice,x,y,150);
                    audio_emitter_gain(p1voice,(global.master/100)*(global.voice/100));
                    e = audio_play_sound_on(p1voice,choose(vhurt3,vhurt4),false,10);
                    mode = "slam"
                    alarm[0] = round(other.image_alpha*40);
                    motion_set(other.dir,other.image_alpha*20);
                    if (global.p1hp &gt; 0)
                    {
                        global.p1hp -= round(other.image_alpha*20);
                    }
                    if not (instance_exists(o_dmger1))
                    {
                        instance_create(other.x,other.y,o_dmger1)
                        value = round(other.image_alpha*20);
                        with (o_dmger1)
                        {
                            dmg += other.value;
                        }
                    }
                    else if (instance_exists(o_dmger1))
                    {
                        value = round(other.image_alpha*20);
                        with (o_dmger1)
                        {
                            dmg += other.value;
                        }
                    }
                }
            }
            hit = false
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (player = 1)
{
    draw_sprite_ext(sprite_index,image_index,o_p1.x,o_p1.y,image_xscale,image_yscale,0,c_white,image_alpha*0.4);
    draw_set_blend_mode(bm_add);
    draw_sprite_ext(sprite_index,image_index,o_p1.x,o_p1.y,image_xscale,image_yscale,0,global.p1aura,image_alpha*0.5);
    draw_set_blend_mode(bm_normal);
}
if (player = 2)
{
    draw_sprite_ext(sprite_index,image_index,o_p2.x,o_p2.y,image_xscale,image_yscale,0,c_white,image_alpha*0.4);
    draw_set_blend_mode(bm_add);
    draw_sprite_ext(sprite_index,image_index,o_p2.x,o_p2.y,image_xscale,image_yscale,0,global.p2aura,image_alpha*0.5);
    draw_set_blend_mode(bm_normal);
}
if (player = 3)
{
    draw_sprite_ext(sprite_index,image_index,o_p1tutorial.x,o_p1tutorial.y,image_xscale,image_yscale,0,c_white,image_alpha*0.4);
    draw_set_blend_mode(bm_add);
    draw_sprite_ext(sprite_index,image_index,o_p1tutorial.x,o_p1tutorial.y,image_xscale,image_yscale,0,global.p1aura,image_alpha*0.5);
    draw_set_blend_mode(bm_normal);
}
if (player = 4)
{
    draw_sprite_ext(sprite_index,image_index,o_p2tutorial.x,o_p2tutorial.y,image_xscale,image_yscale,0,c_white,image_alpha*0.4);
    draw_set_blend_mode(bm_add);
    draw_sprite_ext(sprite_index,image_index,o_p2tutorial.x,o_p2tutorial.y,image_xscale,image_yscale,0,global.p2aura,image_alpha*0.5);
    draw_set_blend_mode(bm_normal);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
