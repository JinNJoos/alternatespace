<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_testbigbullet</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dead = false;

emit = audio_emitter_create();
audio_emitter_position(emit,x,y,150);
audio_emitter_gain(emit,(global.master/100)*(global.effect/100));
c = audio_play_sound_on(emit,f_firebig,false,10);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (dead = true)
{
if (player = 1)
{
    emit = audio_emitter_create();
    audio_emitter_position(emit,x,y,150);
    audio_emitter_gain(emit,(global.master/100)*(global.effect/100));
    d = audio_play_sound_on(emit,f_firehit,false,10);
    if (global.particles = "On")
    {
    repeat(100)
    {
        a = instance_create(x,y,o_testspark);
        with (a)
        {
            motion_set(random(360),random(10));
            aura = global.p1aura;
        }
    }
    }
    instance_destroy();
}
if (player = 2)
{
    emit = audio_emitter_create();
    audio_emitter_position(emit,x,y,150);
    audio_emitter_gain(emit,(global.master/100)*(global.effect/100));
    d = audio_play_sound_on(emit,f_firehit,false,10);
    if (global.particles = "On")
    {
    repeat(100)
    {
        a = instance_create(x,y,o_testspark);
        with (a)
        {
            motion_set(random(360),random(10));
            aura = global.p2aura;
        }
    }
    }
    instance_destroy();
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_emitter_position(emit,x,y,150);
audio_emitter_gain(emit,(global.master/100)*(global.effect/100));
image_speed = speed/30;

if (player = 1)
{
    motion_add(dir,1.5);
    if (global.particles = "On")
    {
    repeat(6)
    {
        a = instance_create(x,y,o_testspark);
        with (a)
        {
            motion_set(random(360),random(3));
            aura = global.p1aura;
        }
    }
    }
}
if (player = 2)
{
    motion_add(dir,1.5);
    if (global.particles = "On")
    {
    repeat(6)
    {
        a = instance_create(x,y,o_testspark);
        with (a)
        {
            motion_set(random(360),random(3));
            aura = global.p2aura;
        }
    }
    }
}
if (speed &gt; 30)
{
    speed = 30;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="o_testdriver">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (player = 1)
{
    if (other.player = 2)
    {
        emit = audio_emitter_create();
        audio_emitter_position(emit,x,y,150);
        audio_emitter_gain(emit,(global.master/100)*(global.effect/100));
        d = audio_play_sound_on(emit,f_block,false,10);
        dead = true;
    }
}
if (player = 2)
{
    if (other.player = 1)
    {
        emit = audio_emitter_create();
        audio_emitter_position(emit,x,y,150);
        audio_emitter_gain(emit,(global.master/100)*(global.effect/100));
        d = audio_play_sound_on(emit,f_block,false,10);
        dead = true;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="o_testpunch4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (player = 1)
{
    dead = true;
}
if (player = 2)
{
    dead = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="o_testbullet5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (player = 1)
and (other.player = 2)
{
    if (other.go = true)
    {
        if (other.scale &lt; 2.5)
        {
            other.dead = true;
        }
        if (other.scale &gt;= 2.5)
        {
            dead = true;
            other.dead = true;
        }
    }
}

if (player = 2)
and (other.player = 1)
{
    if (other.go = true)
    {
        if (other.scale &lt; 2.5)
        {
            other.dead = true;
        }
        if (other.scale &gt;= 2.5)
        {
            dead = true;
            other.dead = true;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="o_testbigbullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (player = 1)
{
    if (other.player = 2)
    {
        dead = true;
        other.dead = true;
    }
}
if (player = 2)
{
    if (other.player = 1)
    {
        dead = true;
        other.dead = true;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="o_burst">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (player = 1)
{
    if (other.player = 2)
    {
        emit = audio_emitter_create();
        audio_emitter_position(emit,x,y,150);
        audio_emitter_gain(emit,(global.master/100)*(global.effect/100));
        d = audio_play_sound_on(emit,f_block,false,10);
        dead = true;
    }
}
if (player = 2)
{
    if (other.player = 1)
    {
        emit = audio_emitter_create();
        audio_emitter_position(emit,x,y,150);
        audio_emitter_gain(emit,(global.master/100)*(global.effect/100));
        d = audio_play_sound_on(emit,f_block,false,10);
        dead = true;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="o_p2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (player = 1)
{
    if (global.p2hp &gt; 0)
    {
    dir = image_angle;
    with (o_p2)
    {
        if (mode = "guard")
        {
            if (audio_is_playing(c))
            {
                audio_stop_sound(c);
            }
            if (audio_is_playing(d))
            {
                audio_stop_sound(d);
            }
            if (audio_is_playing(e))
            {
                audio_stop_sound(e);
            }
            audio_emitter_position(p2emit,x,y,150);
            audio_emitter_gain(p2emit,(global.master/100)*(global.effect/100));
            c = audio_play_sound_on(p2emit,f_guardbreak,false,10);
            audio_emitter_position(p2voice,x,y,150);
            audio_emitter_gain(p2voice,(global.master/100)*(global.voice/100));
            e = audio_play_sound_on(p2voice,choose(vhurt1,vhurt2),false,10);
            mode = "break"
            alarm[0] = 60;
            motion_set(other.direction,8);
            global.p2tp -= 12;
            if (global.p2hp &gt; 0)
            {
                global.p2hp -= 12*o_p1.overdrive;
            }
            if not (instance_exists(o_dmger2))
            {
                instance_create(other.x,other.y,o_dmger2)
                with (o_dmger2)
                {
                    dmg += 12*o_p1.overdrive;
                }
            }
            else if (instance_exists(o_dmger2))
            {
                with (o_dmger2)
                {
                    dmg += 12*o_p1.overdrive;
                }
            }
            repeat(200)
            {
                a = instance_create(x,y,o_testspark);
                with (a)
                {
                    motion_set(random(360),random(6));
                    aura = global.p2aura;
                }
            }
        }
        else if not (mode = "guard")
        {
            if (audio_is_playing(c))
            {
                audio_stop_sound(c);
            }
            if (audio_is_playing(e))
            {
                audio_stop_sound(e);
            }
            audio_emitter_position(p2emit,x,y,150);
            audio_emitter_gain(p2emit,(global.master/100)*(global.effect/100));
            c = audio_play_sound_on(p2emit,f_firehit,false,10);
            audio_emitter_position(p2voice,x,y,150);
            audio_emitter_gain(p2voice,(global.master/100)*(global.voice/100));
            e = audio_play_sound_on(p2voice,choose(vhurt3,vhurt4),false,10);
            mode = "hurt"
            alarm[0] = 24;
            motion_set(other.direction,8);
            if (global.p2hp &gt; 0)
            {
                global.p2hp -= 24*o_p1.overdrive;
            }
            if not (instance_exists(o_dmger2))
            {
                instance_create(other.x,other.y,o_dmger2)
                with (o_dmger2)
                {
                    dmg += 24*o_p1.overdrive;
                }
            }
            else if (instance_exists(o_dmger2))
            {
                with (o_dmger2)
                {
                    dmg += 24*o_p1.overdrive;
                }
            }
        }
    }
    dead = true;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="o_p1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (player = 2)
{
    if (global.p1hp &gt; 0)
    {
    dir = image_angle;
    with (o_p1)
    {
        if (mode = "guard")
        {
            if (audio_is_playing(c))
            {
                audio_stop_sound(c);
            }
            if (audio_is_playing(d))
            {
                audio_stop_sound(d);
            }
            if (audio_is_playing(e))
            {
                audio_stop_sound(e);
            }
            audio_emitter_position(p1emit,x,y,150);
            audio_emitter_gain(p1emit,(global.master/100)*(global.effect/100));
            c = audio_play_sound_on(p1emit,f_guardbreak,false,10);
            audio_emitter_position(p1voice,x,y,150);
            audio_emitter_gain(p1voice,(global.master/100)*(global.voice/100));
            e = audio_play_sound_on(p1voice,choose(vhurt1,vhurt2),false,10);
            mode = "break"
            alarm[0] = 60;
            motion_set(other.direction,8);
            global.p1tp -= 12;
            if (global.p1hp &gt; 0)
            {
                global.p1hp -= 12*o_p2.overdrive;
            }
            if not (instance_exists(o_dmger1))
            {
                instance_create(other.x,other.y,o_dmger1)
                with (o_dmger1)
                {
                    dmg += 12*o_p2.overdrive;
                }
            }
            else if (instance_exists(o_dmger1))
            {
                with (o_dmger1)
                {
                    dmg += 12*o_p2.overdrive;
                }
            }
            repeat(200)
            {
                a = instance_create(x,y,o_testspark);
                with (a)
                {
                    motion_set(random(360),random(6));
                    aura = global.p1aura;
                }
            }
        }
        else if not (mode = "guard")
        {
            if (audio_is_playing(c))
            {
                audio_stop_sound(c);
            }
            if (audio_is_playing(e))
            {
                audio_stop_sound(e);
            }
            audio_emitter_position(p1emit,x,y,150);
            audio_emitter_gain(p1emit,(global.master/100)*(global.effect/100));
            c = audio_play_sound_on(p1emit,f_firehit,false,10);
            audio_emitter_position(p1voice,x,y,150);
            audio_emitter_gain(p1voice,(global.master/100)*(global.voice/100));
            e = audio_play_sound_on(p1voice,choose(vhurt3,vhurt4),false,10);
            mode = "hurt"
            alarm[0] = 24;
            motion_set(other.direction,8);
            if (global.p1hp &gt; 0)
            {
                global.p1hp -= 24*o_p2.overdrive;
            }
            if not (instance_exists(o_dmger1))
            {
                instance_create(other.x,other.y,o_dmger1)
                with (o_dmger1)
                {
                    dmg += 24*o_p2.overdrive;
                }
            }
            else if (instance_exists(o_dmger1))
            {
                with (o_dmger1)
                {
                    dmg += 24*o_p2.overdrive;
                }
            }
        }
    }
    dead = true;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprite_index,image_index,x,y,1,1,image_angle,c_white,0.4);
draw_set_blend_mode(bm_add);
draw_sprite_ext(sprite_index,image_index,x,y,1,1,image_angle,aura,0.5);
draw_set_blend_mode(bm_normal);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
