<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-9999</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///For char icons

emit = audio_emitter_create();
audio_emitter_position(emit,x,y,100);
audio_emitter_gain(emit,(global.master/100)*(global.effect/100));

alpha1 = 0;
alpha2 = 0;

global.dmg1 = 0;
global.combo1 = 0;
global.dmg2 = 0;
global.combo2 = 0;

p1color = c_white;
p2color = c_white;

if (global.p1char = 'loz')
{
    icon_char1 = s_lozicon;
}
if (global.p1char = 'zer')
{
    icon_char1 = s_zericon;
}

color_a1 = c_white;
color_b1 = c_white;
color_c1 = c_white;
color_d1 = c_white;
color_e1 = c_white;
color_f1 = c_white;


if (global.p2char = 'loz')
{
    icon_char2 = s_lozicon;
}
if (global.p2char = 'zer')
{
    icon_char2 = s_zericon;
}

color_a2 = c_white;
color_b2 = c_white;
color_c2 = c_white;
color_d2 = c_white;
color_e2 = c_white;
color_f2 = c_white;


alarm[0] = 18000;
timer = alarm[0];
battle = "ongoing";
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///For skill a1

if (global.p1skill_a = 'none')
{
    icon_a1 = s_iconblank;
}
if (global.p1skill_a = tech_testblast)
{
    icon_a1 = s_iconcshot;
}
if (global.p1skill_a = tech_testblast2)
{
    icon_a1 = s_iconrfire;
}
if (global.p1skill_a = tech_testlaser)
{
    icon_a1 = s_iconrlaser;
}
if (global.p1skill_a = tech_testblast3)
{
    icon_a1 = s_iconsshot;
}
if (global.p1skill_a = tech_testblast4)
{
    icon_a1 = s_iconcblast;
}
if (global.p1skill_a = tech_testblast5)
{
    icon_a1 = s_iconcorb;
}
if (global.p1skill_a = tech_testpunch1)
{
    icon_a1 = s_iconphits;
}
if (global.p1skill_a = tech_testpunch2)
{
    icon_a1 = s_iconrtaps;
}
if (global.p1skill_a = tech_testpunch3)
{
    icon_a1 = s_iconrtackle;
}
if (global.p1skill_a = tech_testpunch4)
{
    icon_a1 = s_iconwswing;
}
if (global.p1skill_a = tech_testgrapple)
{
    icon_a1 = s_icongrab;
}
if (global.p1skill_a = tech_testcounter)
{
    icon_a1 = s_iconcounter;
}
if (global.p1skill_a = tech_testtrap)
{
    icon_a1 = s_iconshackles;
}
if (global.p1skill_a = tech_testreflect)
{
    icon_a1 = s_iconreflect;
}
if (global.p1skill_a = tech_testteleport)
{
    icon_a1 = s_iconteleport;
}
if (global.p1skill_a = tech_testrevector)
{
    icon_a1 = s_iconvector;
}
if (global.p1skill_a = tech_testduplicate)
{
    icon_a1 = s_iconclone;
}
if (global.p1skill_a = tech_testoverdrive)
{
    icon_a1 = s_icondrive;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///For skill b1

if (global.p1skill_b = 'none')
{
    icon_b1 = s_iconblank;
}
if (global.p1skill_b = tech_testblast)
{
    icon_b1 = s_iconcshot;
}
if (global.p1skill_b = tech_testblast2)
{
    icon_b1 = s_iconrfire;
}
if (global.p1skill_b = tech_testlaser)
{
    icon_b1 = s_iconrlaser;
}
if (global.p1skill_b = tech_testblast3)
{
    icon_b1 = s_iconsshot;
}
if (global.p1skill_b = tech_testblast4)
{
    icon_b1 = s_iconcblast;
}
if (global.p1skill_b = tech_testblast5)
{
    icon_b1 = s_iconcorb;
}
if (global.p1skill_b = tech_testpunch1)
{
    icon_b1 = s_iconphits;
}
if (global.p1skill_b = tech_testpunch2)
{
    icon_b1 = s_iconrtaps;
}
if (global.p1skill_b = tech_testpunch3)
{
    icon_b1 = s_iconrtackle;
}
if (global.p1skill_b = tech_testpunch4)
{
    icon_b1 = s_iconwswing;
}
if (global.p1skill_b = tech_testgrapple)
{
    icon_b1 = s_icongrab;
}
if (global.p1skill_b = tech_testcounter)
{
    icon_b1 = s_iconcounter;
}
if (global.p1skill_b = tech_testtrap)
{
    icon_b1 = s_iconshackles;
}
if (global.p1skill_b = tech_testreflect)
{
    icon_b1 = s_iconreflect;
}
if (global.p1skill_b = tech_testteleport)
{
    icon_b1 = s_iconteleport;
}
if (global.p1skill_b = tech_testrevector)
{
    icon_b1 = s_iconvector;
}
if (global.p1skill_b = tech_testduplicate)
{
    icon_b1 = s_iconclone;
}
if (global.p1skill_b = tech_testoverdrive)
{
    icon_b1 = s_icondrive;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///For skill c1

if (global.p1skill_c = 'none')
{
    icon_c1 = s_iconblank;
}
if (global.p1skill_c = tech_testblast)
{
    icon_c1 = s_iconcshot;
}
if (global.p1skill_c = tech_testblast2)
{
    icon_c1 = s_iconrfire;
}
if (global.p1skill_c = tech_testlaser)
{
    icon_c1 = s_iconrlaser;
}
if (global.p1skill_c = tech_testblast3)
{
    icon_c1 = s_iconsshot;
}
if (global.p1skill_c = tech_testblast4)
{
    icon_c1 = s_iconcblast;
}
if (global.p1skill_c = tech_testblast5)
{
    icon_c1 = s_iconcorb;
}
if (global.p1skill_c = tech_testpunch1)
{
    icon_c1 = s_iconphits;
}
if (global.p1skill_c = tech_testpunch2)
{
    icon_c1 = s_iconrtaps;
}
if (global.p1skill_c = tech_testpunch3)
{
    icon_c1 = s_iconrtackle;
}
if (global.p1skill_c = tech_testpunch4)
{
    icon_c1 = s_iconwswing;
}
if (global.p1skill_c = tech_testgrapple)
{
    icon_c1 = s_icongrab;
}
if (global.p1skill_c = tech_testcounter)
{
    icon_c1 = s_iconcounter;
}
if (global.p1skill_c = tech_testtrap)
{
    icon_c1 = s_iconshackles;
}
if (global.p1skill_c = tech_testreflect)
{
    icon_c1 = s_iconreflect;
}
if (global.p1skill_c = tech_testteleport)
{
    icon_c1 = s_iconteleport;
}
if (global.p1skill_c = tech_testrevector)
{
    icon_c1 = s_iconvector;
}
if (global.p1skill_c = tech_testduplicate)
{
    icon_c1 = s_iconclone;
}
if (global.p1skill_c = tech_testoverdrive)
{
    icon_c1 = s_icondrive;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///For skill d1

if (global.p1skill_d = 'none')
{
    icon_d1 = s_iconblank;
}
if (global.p1skill_d = tech_testblast)
{
    icon_d1 = s_iconcshot;
}
if (global.p1skill_d = tech_testblast2)
{
    icon_d1 = s_iconrfire;
}
if (global.p1skill_d = tech_testlaser)
{
    icon_d1 = s_iconrlaser;
}
if (global.p1skill_d = tech_testblast3)
{
    icon_d1 = s_iconsshot;
}
if (global.p1skill_d = tech_testblast4)
{
    icon_d1 = s_iconcblast;
}
if (global.p1skill_d = tech_testblast5)
{
    icon_d1 = s_iconcorb;
}
if (global.p1skill_d = tech_testpunch1)
{
    icon_d1 = s_iconphits;
}
if (global.p1skill_d = tech_testpunch2)
{
    icon_d1 = s_iconrtaps;
}
if (global.p1skill_d = tech_testpunch3)
{
    icon_d1 = s_iconrtackle;
}
if (global.p1skill_d = tech_testpunch4)
{
    icon_d1 = s_iconwswing;
}
if (global.p1skill_d = tech_testgrapple)
{
    icon_d1 = s_icongrab;
}
if (global.p1skill_d = tech_testcounter)
{
    icon_d1 = s_iconcounter;
}
if (global.p1skill_d = tech_testtrap)
{
    icon_d1 = s_iconshackles;
}
if (global.p1skill_d = tech_testreflect)
{
    icon_d1 = s_iconreflect;
}
if (global.p1skill_d = tech_testteleport)
{
    icon_d1 = s_iconteleport;
}
if (global.p1skill_d = tech_testrevector)
{
    icon_d1 = s_iconvector;
}
if (global.p1skill_d = tech_testduplicate)
{
    icon_d1 = s_iconclone;
}
if (global.p1skill_d = tech_testoverdrive)
{
    icon_d1 = s_icondrive;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///For skill e1

if (global.p1skill_e = 'none')
{
    icon_e1 = s_iconblank;
}
if (global.p1skill_e = tech_testblast)
{
    icon_e1 = s_iconcshot;
}
if (global.p1skill_e = tech_testblast2)
{
    icon_e1 = s_iconrfire;
}
if (global.p1skill_e = tech_testlaser)
{
    icon_e1 = s_iconrlaser;
}
if (global.p1skill_e = tech_testblast3)
{
    icon_e1 = s_iconsshot;
}
if (global.p1skill_e = tech_testblast4)
{
    icon_e1 = s_iconcblast;
}
if (global.p1skill_e = tech_testblast5)
{
    icon_e1 = s_iconcorb;
}
if (global.p1skill_e = tech_testpunch1)
{
    icon_e1 = s_iconphits;
}
if (global.p1skill_e = tech_testpunch2)
{
    icon_e1 = s_iconrtaps;
}
if (global.p1skill_e = tech_testpunch3)
{
    icon_e1 = s_iconrtackle;
}
if (global.p1skill_e = tech_testpunch4)
{
    icon_e1 = s_iconwswing;
}
if (global.p1skill_e = tech_testgrapple)
{
    icon_e1 = s_icongrab;
}
if (global.p1skill_e = tech_testcounter)
{
    icon_e1 = s_iconcounter;
}
if (global.p1skill_e = tech_testtrap)
{
    icon_e1 = s_iconshackles;
}
if (global.p1skill_e = tech_testreflect)
{
    icon_e1 = s_iconreflect;
}
if (global.p1skill_e = tech_testteleport)
{
    icon_e1 = s_iconteleport;
}
if (global.p1skill_e = tech_testrevector)
{
    icon_e1 = s_iconvector;
}
if (global.p1skill_e = tech_testduplicate)
{
    icon_e1 = s_iconclone;
}
if (global.p1skill_e = tech_testoverdrive)
{
    icon_e1 = s_icondrive;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///For skill f1

if (global.p1skill_f = 'none')
{
    icon_f1 = s_iconblank;
}
if (global.p1skill_f = tech_testblast)
{
    icon_f1 = s_iconcshot;
}
if (global.p1skill_f = tech_testblast2)
{
    icon_f1 = s_iconrfire;
}
if (global.p1skill_f = tech_testlaser)
{
    icon_f1 = s_iconrlaser;
}
if (global.p1skill_f = tech_testblast3)
{
    icon_f1 = s_iconsshot;
}
if (global.p1skill_f = tech_testblast4)
{
    icon_f1 = s_iconcblast;
}
if (global.p1skill_f = tech_testblast5)
{
    icon_f1 = s_iconcorb;
}
if (global.p1skill_f = tech_testpunch1)
{
    icon_f1 = s_iconphits;
}
if (global.p1skill_f = tech_testpunch2)
{
    icon_f1 = s_iconrtaps;
}
if (global.p1skill_f = tech_testpunch3)
{
    icon_f1 = s_iconrtackle;
}
if (global.p1skill_f = tech_testpunch4)
{
    icon_f1 = s_iconwswing;
}
if (global.p1skill_f = tech_testgrapple)
{
    icon_f1 = s_icongrab;
}
if (global.p1skill_f = tech_testcounter)
{
    icon_f1 = s_iconcounter;
}
if (global.p1skill_f = tech_testtrap)
{
    icon_f1 = s_iconshackles;
}
if (global.p1skill_f = tech_testreflect)
{
    icon_f1 = s_iconreflect;
}
if (global.p1skill_f = tech_testteleport)
{
    icon_f1 = s_iconteleport;
}
if (global.p1skill_f = tech_testrevector)
{
    icon_f1 = s_iconvector;
}
if (global.p1skill_f = tech_testduplicate)
{
    icon_f1 = s_iconclone;
}
if (global.p1skill_f = tech_testoverdrive)
{
    icon_f1 = s_icondrive;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///For skill a2

if (global.p2skill_a = 'none')
{
    icon_a2 = s_iconblank;
}
if (global.p2skill_a = tech_testblast)
{
    icon_a2 = s_iconcshot;
}
if (global.p2skill_a = tech_testblast2)
{
    icon_a2 = s_iconrfire;
}
if (global.p2skill_a = tech_testlaser)
{
    icon_a2 = s_iconrlaser;
}
if (global.p2skill_a = tech_testblast3)
{
    icon_a2 = s_iconsshot;
}
if (global.p2skill_a = tech_testblast4)
{
    icon_a2 = s_iconcblast;
}
if (global.p2skill_a = tech_testblast5)
{
    icon_a2 = s_iconcorb;
}
if (global.p2skill_a = tech_testpunch1)
{
    icon_a2 = s_iconphits;
}
if (global.p2skill_a = tech_testpunch2)
{
    icon_a2 = s_iconrtaps;
}
if (global.p2skill_a = tech_testpunch3)
{
    icon_a2 = s_iconrtackle;
}
if (global.p2skill_a = tech_testpunch4)
{
    icon_a2 = s_iconwswing;
}
if (global.p2skill_a = tech_testgrapple)
{
    icon_a2 = s_icongrab;
}
if (global.p2skill_a = tech_testcounter)
{
    icon_a2 = s_iconcounter;
}
if (global.p2skill_a = tech_testtrap)
{
    icon_a2 = s_iconshackles;
}
if (global.p2skill_a = tech_testreflect)
{
    icon_a2 = s_iconreflect;
}
if (global.p2skill_a = tech_testteleport)
{
    icon_a2 = s_iconteleport;
}
if (global.p2skill_a = tech_testrevector)
{
    icon_a2 = s_iconvector;
}
if (global.p2skill_a = tech_testduplicate)
{
    icon_a2 = s_iconclone;
}
if (global.p2skill_a = tech_testoverdrive)
{
    icon_a2 = s_icondrive;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///For skill b2

if (global.p2skill_b = 'none')
{
    icon_b2 = s_iconblank;
}
if (global.p2skill_b = tech_testblast)
{
    icon_b2 = s_iconcshot;
}
if (global.p2skill_b = tech_testblast2)
{
    icon_b2 = s_iconrfire;
}
if (global.p2skill_b = tech_testlaser)
{
    icon_b2 = s_iconrlaser;
}
if (global.p2skill_b = tech_testblast3)
{
    icon_b2 = s_iconsshot;
}
if (global.p2skill_b = tech_testblast4)
{
    icon_b2 = s_iconcblast;
}
if (global.p2skill_b = tech_testblast5)
{
    icon_b2 = s_iconcorb;
}
if (global.p2skill_b = tech_testpunch1)
{
    icon_b2 = s_iconphits;
}
if (global.p2skill_b = tech_testpunch2)
{
    icon_b2 = s_iconrtaps;
}
if (global.p2skill_b = tech_testpunch3)
{
    icon_b2 = s_iconrtackle;
}
if (global.p2skill_b = tech_testpunch4)
{
    icon_b2 = s_iconwswing;
}
if (global.p2skill_b = tech_testgrapple)
{
    icon_b2 = s_icongrab;
}
if (global.p2skill_b = tech_testcounter)
{
    icon_b2 = s_iconcounter;
}
if (global.p2skill_b = tech_testtrap)
{
    icon_b2 = s_iconshackles;
}
if (global.p2skill_b = tech_testreflect)
{
    icon_b2 = s_iconreflect;
}
if (global.p2skill_b = tech_testteleport)
{
    icon_b2 = s_iconteleport;
}
if (global.p2skill_b = tech_testrevector)
{
    icon_b2 = s_iconvector;
}
if (global.p2skill_b = tech_testduplicate)
{
    icon_b2 = s_iconclone;
}
if (global.p2skill_b = tech_testoverdrive)
{
    icon_b2 = s_icondrive;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///For skill c2

if (global.p2skill_c = 'none')
{
    icon_c2 = s_iconblank;
}
if (global.p2skill_c = tech_testblast)
{
    icon_c2 = s_iconcshot;
}
if (global.p2skill_c = tech_testblast2)
{
    icon_c2 = s_iconrfire;
}
if (global.p2skill_c = tech_testlaser)
{
    icon_c2 = s_iconrlaser;
}
if (global.p2skill_c = tech_testblast3)
{
    icon_c2 = s_iconsshot;
}
if (global.p2skill_c = tech_testblast4)
{
    icon_c2 = s_iconcblast;
}
if (global.p2skill_c = tech_testblast5)
{
    icon_c2 = s_iconcorb;
}
if (global.p2skill_c = tech_testpunch2)
{
    icon_c2 = s_iconphits;
}
if (global.p2skill_c = tech_testpunch2)
{
    icon_c2 = s_iconrtaps;
}
if (global.p2skill_c = tech_testpunch3)
{
    icon_c2 = s_iconrtackle;
}
if (global.p2skill_c = tech_testpunch4)
{
    icon_c2 = s_iconwswing;
}
if (global.p2skill_c = tech_testgrapple)
{
    icon_c2 = s_icongrab;
}
if (global.p2skill_c = tech_testcounter)
{
    icon_c2 = s_iconcounter;
}
if (global.p2skill_c = tech_testtrap)
{
    icon_c2 = s_iconshackles;
}
if (global.p2skill_c = tech_testreflect)
{
    icon_c2 = s_iconreflect;
}
if (global.p2skill_c = tech_testteleport)
{
    icon_c2 = s_iconteleport;
}
if (global.p2skill_c = tech_testrevector)
{
    icon_c2 = s_iconvector;
}
if (global.p2skill_c = tech_testduplicate)
{
    icon_c2 = s_iconclone;
}
if (global.p2skill_c = tech_testoverdrive)
{
    icon_c2 = s_icondrive;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///For skill d2

if (global.p2skill_d = 'none')
{
    icon_d2 = s_iconblank;
}
if (global.p2skill_d = tech_testblast)
{
    icon_d2 = s_iconcshot;
}
if (global.p2skill_d = tech_testblast2)
{
    icon_d2 = s_iconrfire;
}
if (global.p2skill_d = tech_testlaser)
{
    icon_d2 = s_iconrlaser;
}
if (global.p2skill_d = tech_testblast3)
{
    icon_d2 = s_iconsshot;
}
if (global.p2skill_d = tech_testblast4)
{
    icon_d2 = s_iconcblast;
}
if (global.p2skill_d = tech_testblast5)
{
    icon_d2 = s_iconcorb;
}
if (global.p2skill_d = tech_testpunch1)
{
    icon_d2 = s_iconphits;
}
if (global.p2skill_d = tech_testpunch2)
{
    icon_d2 = s_iconrtaps;
}
if (global.p2skill_d = tech_testpunch3)
{
    icon_d2 = s_iconrtackle;
}
if (global.p2skill_d = tech_testpunch4)
{
    icon_d2 = s_iconwswing;
}
if (global.p2skill_d = tech_testgrapple)
{
    icon_d2 = s_icongrab;
}
if (global.p2skill_d = tech_testcounter)
{
    icon_d2 = s_iconcounter;
}
if (global.p2skill_d = tech_testtrap)
{
    icon_d2 = s_iconshackles;
}
if (global.p2skill_d = tech_testreflect)
{
    icon_d2 = s_iconreflect;
}
if (global.p2skill_d = tech_testteleport)
{
    icon_d2 = s_iconteleport;
}
if (global.p2skill_d = tech_testrevector)
{
    icon_d2 = s_iconvector;
}
if (global.p2skill_d = tech_testduplicate)
{
    icon_d2 = s_iconclone;
}
if (global.p2skill_d = tech_testoverdrive)
{
    icon_d2 = s_icondrive;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///For skill e2

if (global.p2skill_e = 'none')
{
    icon_e2 = s_iconblank;
}
if (global.p2skill_e = tech_testblast)
{
    icon_e2 = s_iconcshot;
}
if (global.p2skill_e = tech_testblast2)
{
    icon_e2 = s_iconrfire;
}
if (global.p2skill_e = tech_testlaser)
{
    icon_e2 = s_iconrlaser;
}
if (global.p2skill_e = tech_testblast3)
{
    icon_e2 = s_iconsshot;
}
if (global.p2skill_e = tech_testblast4)
{
    icon_e2 = s_iconcblast;
}
if (global.p2skill_e = tech_testblast5)
{
    icon_e2 = s_iconcorb;
}
if (global.p2skill_e = tech_testpunch2)
{
    icon_e2 = s_iconphits;
}
if (global.p2skill_e = tech_testpunch2)
{
    icon_e2 = s_iconrtaps;
}
if (global.p2skill_e = tech_testpunch3)
{
    icon_e2 = s_iconrtackle;
}
if (global.p2skill_e = tech_testpunch4)
{
    icon_e2 = s_iconwswing;
}
if (global.p2skill_e = tech_testgrapple)
{
    icon_e2 = s_icongrab;
}
if (global.p2skill_e = tech_testcounter)
{
    icon_e2 = s_iconcounter;
}
if (global.p2skill_e = tech_testtrap)
{
    icon_e2 = s_iconshackles;
}
if (global.p2skill_e = tech_testreflect)
{
    icon_e2 = s_iconreflect;
}
if (global.p2skill_e = tech_testteleport)
{
    icon_e2 = s_iconteleport;
}
if (global.p2skill_e = tech_testrevector)
{
    icon_e2 = s_iconvector;
}
if (global.p2skill_e = tech_testduplicate)
{
    icon_e2 = s_iconclone;
}
if (global.p2skill_e = tech_testoverdrive)
{
    icon_e2 = s_icondrive;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///For skill f2

if (global.p2skill_f = 'none')
{
    icon_f2 = s_iconblank;
}
if (global.p2skill_f = tech_testblast)
{
    icon_f2 = s_iconcshot;
}
if (global.p2skill_f = tech_testblast2)
{
    icon_f2 = s_iconrfire;
}
if (global.p2skill_f = tech_testlaser)
{
    icon_f2 = s_iconrlaser;
}
if (global.p2skill_f = tech_testblast3)
{
    icon_f2 = s_iconsshot;
}
if (global.p2skill_f = tech_testblast4)
{
    icon_f2 = s_iconcblast;
}
if (global.p2skill_f = tech_testblast5)
{
    icon_f2 = s_iconcorb;
}
if (global.p2skill_f = tech_testpunch2)
{
    icon_f2 = s_iconphits;
}
if (global.p2skill_f = tech_testpunch2)
{
    icon_f2 = s_iconrtaps;
}
if (global.p2skill_f = tech_testpunch3)
{
    icon_f2 = s_iconrtackle;
}
if (global.p2skill_f = tech_testpunch4)
{
    icon_f2 = s_iconwswing;
}
if (global.p2skill_f = tech_testgrapple)
{
    icon_f2 = s_icongrab;
}
if (global.p2skill_f = tech_testcounter)
{
    icon_f2 = s_iconcounter;
}
if (global.p2skill_f = tech_testtrap)
{
    icon_f2 = s_iconshackles;
}
if (global.p2skill_f = tech_testreflect)
{
    icon_f2 = s_iconreflect;
}
if (global.p2skill_f = tech_testteleport)
{
    icon_f2 = s_iconteleport;
}
if (global.p2skill_f = tech_testrevector)
{
    icon_f2 = s_iconvector;
}
if (global.p2skill_f = tech_testduplicate)
{
    icon_f2 = s_iconclone;
}
if (global.p2skill_f = tech_testoverdrive)
{
    icon_f2 = s_icondrive;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.p1hp &gt; global.p2hp)
{
    with (o_p2)
    {
        global.p2hp = 0;
        mode = "lose";
    }
}

if (global.p1hp &lt; global.p2hp)
{
    with (o_p1)
    {
        global.p1hp = 0;
        mode = "lose";
    }
}

if (global.p1hp = global.p2hp)
{
    with (o_p1)
    {
        global.p1hp = 0;
        mode = "lose";
    }
    with (o_p2)
    {
        global.p2hp = 0;
        mode = "lose";
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Button press color change
timer = alarm[0];

if (keyboard_check(global.p1_tech_a))
or (gamepad_button_check(0,global.p1p_tech_a))
{
    if not (keyboard_check(global.p1_shift))
    and not (gamepad_button_check(0,global.p1p_shift))
    {
        color_a1 = global.p1aura;
        if (color_d1 = global.p1aura)
        {
            color_d1 = c_silver;
        }
    }
    if (keyboard_check(global.p1_shift))
    or (gamepad_button_check(0,global.p1p_shift))
    {
        color_d1 = global.p1aura;
        if (color_a1 = global.p1aura)
        {
            color_a1 = c_silver;
        }
    }
}
if not (keyboard_check(global.p1_tech_a))
and not (gamepad_button_check(0,global.p1p_tech_a))
{
    color_a1 = c_silver;
    color_d1 = c_silver;
}

if (keyboard_check(global.p1_tech_b))
or (gamepad_button_check(0,global.p1p_tech_b))
{
    if not (keyboard_check(global.p1_shift))
    and not (gamepad_button_check(0,global.p1p_shift))
    {
        color_b1 = global.p1aura;
        if (color_e1 = global.p1aura)
        {
            color_e1 = c_silver;
        }
    }
    if (keyboard_check(global.p1_shift))
    or (gamepad_button_check(0,global.p1p_shift))
    {
        color_e1 = global.p1aura;
        if (color_b1 = global.p1aura)
        {
            color_b1 = c_silver;
        }
    }
}
if not (keyboard_check(global.p1_tech_b))
and not (gamepad_button_check(0,global.p1p_tech_b))
{
    color_b1 = c_silver;
    color_e1 = c_silver;
}

if (keyboard_check(global.p1_tech_c))
{
    if not (keyboard_check(global.p1_shift))
    and not (gamepad_button_check(0,global.p1p_shift))
    {
        color_c1 = global.p1aura;
        if (color_f1 = global.p1aura)
        {
            color_f1 = c_silver;
        }
    }
    if (keyboard_check(global.p1_shift))
    or (gamepad_button_check(0,global.p1p_shift))
    {
        color_f1 = global.p1aura;
        if (color_c1 = global.p1aura)
        {
            color_c1 = c_silver;
        }
    }
}
if not (keyboard_check(global.p1_tech_c))
and not (gamepad_button_check(0,global.p1p_tech_c))
{
    color_c1 = c_silver;
    color_f1 = c_silver;
}

///////////////////////////////

if (keyboard_check(global.p2_tech_a))
or (gamepad_button_check(1,global.p2p_tech_a))
{
    if not (keyboard_check(global.p2_shift))
    and not (gamepad_button_check(1,global.p2p_shift))
    {
        color_a2 = global.p2aura;
        if (color_d2 = global.p2aura)
        {
            color_d2 = c_silver;
        }
    }
    if (keyboard_check(global.p2_shift))
    or (gamepad_button_check(1,global.p2p_shift))
    {
        color_d2 = global.p2aura;
        if (color_a2 = global.p2aura)
        {
            color_a2 = c_silver;
        }
    }
}
if not (keyboard_check(global.p2_tech_a))
and not (gamepad_button_check(1,global.p2p_tech_a))
{
    color_a2 = c_silver;
    color_d2 = c_silver;
}

if (keyboard_check(global.p2_tech_b))
{
    if not (keyboard_check(global.p2_shift))
    and not (gamepad_button_check(1,global.p2p_shift))
    {
        color_b2 = global.p2aura;
        if (color_e2 = global.p2aura)
        {
            color_e2 = c_silver;
        }
    }
    if (keyboard_check(global.p2_shift))
    or (gamepad_button_check(1,global.p2p_shift))
    {
        color_e2 = global.p2aura;
        if (color_b2 = global.p2aura)
        {
            color_b2 = c_silver;
        }
    }
}
if not (keyboard_check(global.p2_tech_b))
and not (gamepad_button_check(1,global.p2p_tech_b))
{
    color_b2 = c_silver;
    color_e2 = c_silver;
}

if (keyboard_check(global.p2_tech_c))
{
    if not (keyboard_check(global.p2_shift))
    and not (gamepad_button_check(1,global.p2p_shift))
    {
        color_c2 = global.p2aura;
        if (color_f2 = global.p2aura)
        {
            color_f2 = c_silver;
        }
    }
    if (keyboard_check(global.p2_shift))
    or (gamepad_button_check(1,global.p2p_shift))
    {
        color_f2 = global.p2aura;
        if (color_c2 = global.p2aura)
        {
            color_c2 = c_silver;
        }
    }
}
if not (keyboard_check(global.p2_tech_c))
and not (gamepad_button_check(1,global.p2p_tech_c))
{
    color_c2 = c_silver;
    color_f2 = c_silver;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Icon color change

if (o_p1.mode = "hurt")
{
    p1color = c_yellow;
}
if (o_p1.mode = "slam")
{
    p1color = c_orange;
}
if (o_p1.mode = "bounce")
{
    p1color = c_red;
}
if (o_p1.mode = "break")
{
    p1color = c_aqua;
}
if (o_p1.mode = "stand")
{
    p1color = c_white;
}

if (o_p2.mode = "hurt")
{
    p2color = c_yellow;
}
if (o_p2.mode = "slam")
{
    p2color = c_orange;
}
if (o_p2.mode = "bounce")
{
    p2color = c_red;
}
if (o_p2.mode = "break")
{
    p2color = c_aqua;
}
if (o_p2.mode = "stand")
{
    p2color = c_white;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Battle condition

x = view_xview+view_wview/2;
y = view_yview+view_hview/2;

audio_listener_position(x,y,0);
audio_emitter_position(emit,x,y,100);
audio_emitter_gain(emit,(global.master/100)*(global.effect/100));

        if (o_p1.mode = "lose")
        or (o_p2.mode = "lose")
        {
            if (global.p1hp &gt; global.p2hp)
            {
                global.winner = "player 1";
            }
            if (global.p1hp &lt; global.p2hp)
            {
                global.winner = "player 2";
            }
            if (global.p1hp = global.p2hp)
            {
                global.winner = "draw";
            }
            if (audio_is_playing(global.bgm))
            {
                audio_stop_sound(global.bgm);
            }
            if (battle = "ongoing")
            {
                battle = "end";
                emit = audio_emitter_create();
                audio_emitter_position(emit,x,y,150);
                audio_emitter_gain(emit,(global.master/100)*(global.effect/100));
                finish = audio_play_sound_on(emit,f_defeat,false,10);
            }
            with (o_p1)
            {
                if (image_alpha &lt;= 0)
                {
                    audio_stop_all();
                    part_system_destroy(global.part_spark);
                    room_goto(r_victory);
                }
            }
            with (o_p2)
            {
                if (image_alpha &lt;= 0)
                {
                    audio_stop_all();
                    part_system_destroy(global.part_spark);
                    room_goto(r_victory);
                }
            }
        }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Combo counter display

if (instance_exists(o_dmger1))
{
    alpha1 = 1;
}
if not (instance_exists(o_dmger1))
{
    alpha1 -= 0.02;
}

if (instance_exists(o_dmger2))
{
    alpha2 = 1;
}
if not (instance_exists(o_dmger2))
{
    alpha2 -= 0.02;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_alpha(0.5);
draw_set_halign(fa_center);
draw_set_valign(fa_middle);

draw_text_transformed(display_get_gui_width()/2,display_get_gui_height()*0.95,string(floor(audio_sound_get_track_position(global.bgm)))+"/"+string(floor(audio_sound_length(global.bgm))),1,1,0)

//draw_text(100,100,string(view_wview));
//draw_text(100,120,string(view_hview));

draw_set_color(c_black);
draw_rectangle(display_get_gui_width()*0.45,display_get_gui_height()*0.03,display_get_gui_width()*0.55,display_get_gui_height()*0.09,false);
draw_set_color(c_yellow);
draw_text_transformed(display_get_gui_width()*0.5,display_get_gui_height()*0.06,real(ceil(timer/60)),2,2,0)

draw_set_color(c_white);


draw_sprite_ext(icon_char1,-1,display_get_gui_width()*0.07,display_get_gui_height()*0.11,1,1,0,p1color,0.7)

draw_text_transformed_colour(display_get_gui_width()*0.1,display_get_gui_height()*0.3,string(global.combo2)+" COMBO",1,1,0,c_orange,c_orange,c_orange,c_orange,alpha2);
draw_text_transformed_colour(display_get_gui_width()*0.1,display_get_gui_height()*0.35,string(global.dmg2)+" DAMAGE",1,1,0,c_orange,c_orange,c_orange,c_orange,alpha2);

if (global.interface = "Overlay")
or (global.interface = "Full")
{
    draw_set_color(c_red);
    draw_rectangle(display_get_gui_width()*0.45,display_get_gui_height()*0.03,(display_get_gui_width()*0.45)-(global.p1hp/2),display_get_gui_height()*0.06,false);
    draw_set_color(c_orange);
    draw_text_transformed(display_get_gui_width()*0.42,display_get_gui_height()*0.04,real(floor(global.p1hp)),1,1,0)
    draw_set_color(c_aqua);
    draw_rectangle(display_get_gui_width()*0.45,display_get_gui_height()*0.061,(display_get_gui_width()*0.45)-(global.p1tp/2),display_get_gui_height()*0.09,false);
    draw_set_color(c_white);
    draw_text_transformed(display_get_gui_width()*0.42,display_get_gui_height()*0.07,real(floor(global.p1tp)),1,1,0)
}

if (global.moveset = "On")
{
    if not (keyboard_check(global.p1_shift))
    and not (gamepad_button_check(0,global.p1p_shift))
    {
        draw_sprite_ext(icon_d1,-1,display_get_gui_width()*0.06,display_get_gui_height()*0.92,1,1,0,color_d1,0.4)
        draw_sprite_ext(icon_e1,-1,display_get_gui_width()*0.12,display_get_gui_height()*0.79,1,1,0,color_e1,0.4)
        draw_sprite_ext(icon_f1,-1,display_get_gui_width()*0.18,display_get_gui_height()*0.92,1,1,0,color_f1,0.4)
        draw_sprite_ext(icon_a1,-1,display_get_gui_width()*0.07,display_get_gui_height()*0.93,1,1,0,color_a1,0.6)
        draw_sprite_ext(icon_b1,-1,display_get_gui_width()*0.13,display_get_gui_height()*0.80,1,1,0,color_b1,0.6)
        draw_sprite_ext(icon_c1,-1,display_get_gui_width()*0.19,display_get_gui_height()*0.93,1,1,0,color_c1,0.6)
    }
    if (keyboard_check(global.p1_shift))
    or (gamepad_button_check(0,global.p1p_shift))
    {
        draw_sprite_ext(icon_a1,-1,display_get_gui_width()*0.06,display_get_gui_height()*0.92,1,1,0,color_a1,0.4)
        draw_sprite_ext(icon_b1,-1,display_get_gui_width()*0.12,display_get_gui_height()*0.79,1,1,0,color_b1,0.4)
        draw_sprite_ext(icon_c1,-1,display_get_gui_width()*0.18,display_get_gui_height()*0.92,1,1,0,color_c1,0.4)
        draw_sprite_ext(icon_d1,-1,display_get_gui_width()*0.07,display_get_gui_height()*0.93,1,1,0,color_d1,0.6)
        draw_sprite_ext(icon_e1,-1,display_get_gui_width()*0.13,display_get_gui_height()*0.80,1,1,0,color_e1,0.6)
        draw_sprite_ext(icon_f1,-1,display_get_gui_width()*0.19,display_get_gui_height()*0.93,1,1,0,color_f1,0.6)
    }
}


draw_sprite_ext(icon_char2,-1,display_get_gui_width()*0.93,display_get_gui_height()*0.11,-1,1,0,p2color,0.7)

draw_text_transformed_colour(display_get_gui_width()*0.9,display_get_gui_height()*0.3,string(global.combo1)+" COMBO",1,1,0,c_orange,c_orange,c_orange,c_orange,alpha1);
draw_text_transformed_colour(display_get_gui_width()*0.9,display_get_gui_height()*0.35,string(global.dmg1)+" DAMAGE",1,1,0,c_orange,c_orange,c_orange,c_orange,alpha1);

if (global.interface = "Overlay")
or (global.interface = "Full")
{
    draw_set_color(c_red);
    draw_rectangle(display_get_gui_width()*0.55,display_get_gui_height()*0.03,(display_get_gui_width()*0.55)+(global.p2hp/2),display_get_gui_height()*0.06,false);
    draw_set_color(c_orange);
    draw_text_transformed(display_get_gui_width()*0.58,display_get_gui_height()*0.04,real(floor(global.p2hp)),1,1,0)
    draw_set_color(c_aqua);
    draw_rectangle(display_get_gui_width()*0.55,display_get_gui_height()*0.061,(display_get_gui_width()*0.55)+(global.p2tp/2),display_get_gui_height()*0.09,false);
    draw_set_color(c_white);
    draw_text_transformed(display_get_gui_width()*0.58,display_get_gui_height()*0.07,real(floor(global.p2tp)),1,1,0)
}

if (global.moveset = "On")
{
    if not (keyboard_check(global.p2_shift))
    and not (gamepad_button_check(1,global.p2p_shift))
    {
        draw_sprite_ext(icon_d2,-1,display_get_gui_width()*0.82,display_get_gui_height()*0.92,1,1,0,color_d2,0.4)
        draw_sprite_ext(icon_e2,-1,display_get_gui_width()*0.88,display_get_gui_height()*0.79,1,1,0,color_e2,0.4)
        draw_sprite_ext(icon_f2,-1,display_get_gui_width()*0.94,display_get_gui_height()*0.92,1,1,0,color_f2,0.4)
        draw_sprite_ext(icon_a2,-1,display_get_gui_width()*0.81,display_get_gui_height()*0.93,1,1,0,color_a2,0.6)
        draw_sprite_ext(icon_b2,-1,display_get_gui_width()*0.87,display_get_gui_height()*0.80,1,1,0,color_b2,0.6)
        draw_sprite_ext(icon_c2,-1,display_get_gui_width()*0.93,display_get_gui_height()*0.93,1,1,0,color_c2,0.6)
    }
    if (keyboard_check(global.p2_shift))
    or (gamepad_button_check(1,global.p2p_shift))
    {
        draw_sprite_ext(icon_a2,-1,display_get_gui_width()*0.82,display_get_gui_height()*0.92,1,1,0,color_a2,0.4)
        draw_sprite_ext(icon_b2,-1,display_get_gui_width()*0.88,display_get_gui_height()*0.79,1,1,0,color_b2,0.4)
        draw_sprite_ext(icon_c2,-1,display_get_gui_width()*0.94,display_get_gui_height()*0.92,1,1,0,color_c2,0.4)
        draw_sprite_ext(icon_d2,-1,display_get_gui_width()*0.81,display_get_gui_height()*0.93,1,1,0,color_d2,0.6)
        draw_sprite_ext(icon_e2,-1,display_get_gui_width()*0.87,display_get_gui_height()*0.80,1,1,0,color_e2,0.6)
        draw_sprite_ext(icon_f2,-1,display_get_gui_width()*0.93,display_get_gui_height()*0.93,1,1,0,color_f2,0.6)
    }
}

draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
